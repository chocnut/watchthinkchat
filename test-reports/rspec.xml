<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="rspec" tests="35" failures="0" errors="0" time="2.910633" timestamp="2014-08-14T21:21:22+12:00">
  <properties/>
  <testcase classname="spec.models.engagement_player_spec" name="EngagementPlayer has a valid factory" time="0.000022">
    <skipped/>
  </testcase>
  <testcase classname="spec.models.engagement_player_spec" name="EngagementPlayer has a test" time="0.000006">
    <skipped/>
  </testcase>
  <testcase classname="spec.models.engagement_player_spec" name="EngagementPlayer is invalid without a campaign" time="0.000005">
    <skipped/>
  </testcase>
  <testcase classname="spec.models.engagement_player_spec" name="EngagementPlayer is invalid without a media link" time="0.000004">
    <skipped/>
  </testcase>
  <testcase classname="spec.controllers.api.messages_controller_spec" name="Api::MessagesController#create should work" time="0.140311"/>
  <testcase classname="spec.controllers.api.operators_controller_spec" name="Api::OperatorsController should get operator info" time="0.012798"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for a visitor #create should not create a new chat for a closed campaign" time="0.024928"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for a visitor #create should use the operator with the least number of max chats if the operator requested is full and there are multiple operators with no chats" time="0.145817"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for a visitor #create should use the operator with the least number of open chats if the operator requested is full and there are multiple operators with no chats" time="0.040992"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for a visitor #create should create a new chat" time="0.021409"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for a visitor #destroy should not work" time="0.028443"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for an operator #collect_stats should work" time="0.041717"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for an operator #collect_stats should handle wonky emails that get passed in by the client" time="0.032458"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for an operator #show should work" time="0.033037"/>
  <testcase classname="spec.controllers.api.chats_controller_spec" name="Api::ChatsController  for an operator #destory should work" time="0.025797"/>
  <testcase classname="spec.controllers.api.visitors_controller_spec" name="Api::VisitorsController should give an error when the visitor ahs no chats" time="0.010986"/>
  <testcase classname="spec.controllers.api.visitors_controller_spec" name="Api::VisitorsController should create a visitor" time="0.011206"/>
  <testcase classname="spec.controllers.api.visitors_controller_spec" name="Api::VisitorsController should update a visitor" time="0.024740"/>
  <testcase classname="spec.controllers.api.url_fwds_controller_spec" name="Api::UrlFwdsController#create should work" time="0.009438"/>
  <testcase classname="spec.controllers.api.emails_controller_spec" name="Api::EmailsController#create should work" time="0.037583"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#password should respond with a 201 when the password is valid" time="0.262994"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#password should not work unless logged in" time="0.084996"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#password should give invalid password for an operator with the wrong password" time="0.162262"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#show should work" time="0.083101"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#show should give a 404 if no campaign found" time="0.080726"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#stats should work" time="0.262674"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#update should work" time="0.228765"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#update should require permission" time="0.085397"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#update should work with the query Adam gave me" time="0.086784"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#update should give an error on invalid followup buttons" time="0.085797"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#update should validate no empty permalink" time="0.089253"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#create should work" time="0.027679"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#create should give an error with an invalid create" time="0.027190"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#index should work" time="0.153376"/>
  <testcase classname="spec.controllers.api.campaigns_controller_spec" name="Api::CampaignsController#index should give a 404 if no campaign found" time="0.082637"/>
</testsuite>
