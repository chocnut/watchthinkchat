'use strict';

angular.module('chatApp').controller('ChatController', function ($scope, $rootScope, $route, $http, $location, $timeout, $sce, Crypt, timeUpdate, campaign_data, visitorActivity) {
  if(campaign_data === null){
    document.write('Error: invalid campaign id.');
    return;
  }
  var visitor_data = {};
  $scope.visitor_fb_data = {
    id: '',
    name: '',
    first_name:'',
    last_name: '',
    email: ''
  };
  var chat_data = {
    chat_uid: ''
  };
  var operator_data = {
    uid: $location.search()['o'] || ''
  };
  var video_completed=false;
  var growth_challenge_visible=false;
  var window_focus=false;
  var YTplayer;
  $scope.growthChallengeStep = -1;
  $scope.liveChat=false;
  $scope.mobileMinChat=true;
  if(angular.isDefined($route.current.params.refer)){
    $scope.christianFriendEmail = Crypt.decodeStr($route.current.params.refer);
  }else{
    $scope.christianFriendEmail = '';
  }
  if(angular.isDefined($route.current.params.n)){
    $scope.christianFriendName = Crypt.decodeStr($route.current.params.n);
  }else{
    $scope.christianFriendName = '';
  }


  $scope.campaign_data = campaign_data;
  window.document.title = campaign_data.title;

  if (campaign_data.type === 'youtube') {
    var tag = document.createElement('script');
    var title = document.title;
    tag.src = "//www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    window.onYouTubeIframeAPIReady = function () {
      $('body').addClass('video');
      YTplayer = new YT.Player('player', {
        //videoId: campaign_data.video_id,
        videoId: 'KGlx11BxF24',
        playerVars: {
          autoplay: 0,
          modestbranding: 1,
          rel: 0,
          showinfo: 0,
          iv_load_policy: 3,
          html5: 1,
          start: campaign_data.video_start,
          end: campaign_data.video_end
        },
        events: {
          'onStateChange': onPlayerStateChange
        }
      });
    };
  }

  //create visitor
  $http({method: 'POST', url: '/api/visitors'}).
    success(function (data, status, headers, config) {
      visitor_data = data;
      visitor_data.profile_pic = '<%= asset_path("avatar.png") %>';
      $rootScope.visitor_uid = data.uid;
      if(campaign_data.preemptive_chat){
        $scope.startChat('');
      }
    }).error(function (data, status, headers, config) {
    });

  $scope.postMessage = function () {
    if($scope.chatMessage==''){
      return;
    }
    var post_data = {
      user_uid: visitor_data.uid,
      message_type: 'user',
      message: $scope.chatMessage
    };
    $scope.chatMessage = '';
    $http({method: 'POST', url: '/api/chats/'+chat_data.chat_uid+'/messages', data: post_data}).
      success(function (data, status, headers, config) {
        //$('.chat-input').attr('placeholder','Message...');
        $('.body').append('<div class="content"><img class="avatar" src="' + visitor_data.profile_pic + '"><div class="message">' + post_data.message + '</div>' +
                '<div class="name muted"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>You</div>' +
                '</div>');
        $('.body').scrollTop($('.body')[0].scrollHeight);
      }).error(function (data, status, headers, config) {
      });
  };

  $scope.startChat = function(initialMsg){
    if(!video_completed && !campaign_data.preemptive_chat){
      $('#finishVideo').fadeIn(1).delay(3000).fadeOut(1);
      $('#start-chat-panel').fadeOut(1).delay(3000).fadeIn(1);
      return;
    }
    if(chat_data.chat_uid){ //chat already started
      return;
    }

    var data = {
      campaign_uid: campaign_data.uid,
      visitor_uid: visitor_data.uid,
      operator_uid: operator_data.uid
    };
    $http({method: 'POST', url: '/api/chats', data: data}).
      success(function (data, status, headers, config) {
        chat_data = data;
        $rootScope.chat_uid = data.chat_uid;
        operator_data = data.operator;
        if(angular.isDefined($scope.button_clicked)){
          $scope.button_clicked.message_visible = $sce.trustAsHtml($scope.button_clicked.message_active_chat);
        }
        $scope.liveChat=true;

        $('.operator').html('<img class="avatar" src="' + operator_data.profile_pic + '">' +
          '<div class="message">You are chatting with<br>' + operator_data.name + '</div>');
        var pusher = new Pusher('249ce47158b276f4d32b');
        pusher.subscribe('visitor_' + visitor_data.uid);
        var channel_chat = pusher.subscribe('chat_'+chat_data.chat_uid);
        channel_chat.bind('event', function (data) {
          if (data.user_uid != visitor_data.uid) {
            if (data.message_type == 'activity') {
              if(data.message == 'challenge'){
                if(!growth_challenge_visible){
                  $('.after-chat-challenge').fadeIn();
                  visitorActivity.queueMessage('Growth Challenge visible');
                  growth_challenge_visible=true;
                  $('body').scrollTop($('body')[0].scrollHeight);
                  $('.body').append('<div class="system"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' +
                          '<div class="message">Growth Challenge visible</div>' +
                          '</div>');
                  $('.body').scrollTop($('.body')[0].scrollHeight);
                  clicky.goal(campaign_data.permalink + ': Growth Challenge visible');
                }
              }
            } else {
              $('.body').append('<div class="content odd"><img class="avatar" src="' + operator_data.profile_pic + '"><div class="message">' + data.message + '</div>' +
                      '<div class="name muted"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' + operator_data.name + '</div>' +
                      '</div>');
              $('.body').scrollTop($('.body')[0].scrollHeight);
              $scope.$apply(function(){
                $scope.mobileMinChat=false;
              });
              if (!window_focus) {
                $('#newMsgAlert')[0].play();
              }
            }
          }
        });

        channel_chat.bind('end', function (data) {
          pusher.unsubscribe('chat_'+chat_data.chat_uid);
          $('#chatEnd').show();
          $('.body').empty();
          chat_data.chat_uid = '';
          $scope.$apply(function(){
            $scope.liveChat=false;
          });
        });

        $timeout(function(){
          if(initialMsg){
            visitorActivity.queueMessage(initialMsg, 'activity-button');
          }
          visitorActivity.queueMessage(clientIP, 'ip');
          visitorActivity.queueMessage(getBrowser(), 'browser');
          visitorActivity.queueMessage(isMobile(), 'mobile');
          visitorActivity.queueMessage(getOS(), 'os');
        }, 2500);
      }).error(function (data, status, headers, config) {
        if(data.error === 'no_operators_available'){
          try{
            $scope.button_clicked.message_visible = $sce.trustAsHtml($scope.button_clicked.message_no_chat) || $sce.trustAsHtml('');
            chat_data.chat_uid = 'offline';
            $rootScope.chat_uid = 'offline';
            $('.after-chat-challenge').fadeIn();
            growth_challenge_visible=true;
          }catch(e){}
          //Get Operator Info
          if(operator_data.uid){
            $http({method: 'GET', url: '/api/operators/' + operator_data.uid}).
              success(function (data, status, headers) {
                operator_data = data;
                $scope.operator_data = data;
                $('#noOperators').show();
              }).error(function() {
                $('#noOperators').show();
              });
          }else{
            $('#noOperators').show();
          }
        }else{
          alert('Error: ' + (data.message || 'Cannot create new chat.'));
        }
      });
  };

  $scope.buttonClick = function(button){
    $scope.button_clicked = button;

    if(!chat_data.chat_uid){
      $scope.startChat(button.text);
    }else{
      visitorActivity.queueMessage(button.text, 'activity-button');
      $scope.button_clicked.message_visible = $sce.trustAsHtml($scope.button_clicked.message_active_chat);
      $('.after-chat-challenge').show();
    }
    $scope.growthChallengeStep = 1;
    clicky.goal(campaign_data.permalink + ': Button Click: ' + button.id + ' (' + button.text + ')');
  };

  $scope.facebookLogin = function(){
    FB.login(function(response) {
      if (response.authResponse) {
        FB.api('/me', function(response) {
          //console.log(response);
          $scope.$apply(function(){
            visitor_data.profile_pic = 'http://graph.facebook.com/'+response.id+'/picture?width=45&height=45';
            if(angular.isDefined(response.email)){
              $scope.visitor_email = response.email;
            }
            $scope.visitor_fb_data = response;
          });
          postVisitorInfo(response);
          $('.body').append('<div class="system"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' +
                  '<div class="message">Logged in with Facebook</div>' +
                  '</div>');
          $('.body').scrollTop($('.body')[0].scrollHeight);
        });
        clicky.goal(campaign_data.permalink + ': Logged in with Facebook');
      }
    });
  }

  $scope.growthChallengeNextStep = function(step){
    if(step==2){
      $('.after-chat-challenge').hide();
      $scope.growthChallengeStep=2;
    }else if(step==3){
      var button_id = $scope.button_clicked.id;
      if($scope.button_clicked.id===6){
        $scope.friend_url = 'http://www.watchthinkchat.com/c/' + campaign_data.uid +
                '?o=' + operator_data.uid +
                '&refer=' + encodeURIComponent(Crypt.encodeStr($scope.visitor_email)) +
                '&n=' + encodeURIComponent(Crypt.encodeStr($scope.visitor_fb_data.first_name));
      }else{
        $scope.friend_url = 'http://www.watchthinkchat.com/challenge/friend?v=' + visitor_data.uid +
                '&button_id='+button_id +
                '&refer=' + encodeURIComponent(Crypt.encodeStr($scope.visitor_email)) +
                '&n=' + encodeURIComponent(Crypt.encodeStr($scope.visitor_fb_data.first_name));
      }

      //create short url
      $http({method: 'POST', url: '/api/url_fwds', data: {url: $scope.friend_url}}).
        success(function (data, status, headers) {
          $scope.friend_url = 'http://www.watchthinkchat.com' + data.short_url;
        }).error(function() {
        });
      $http({method: 'JSONP',
        url: 'https://gcx.us6.list-manage.com/subscribe/post-json?u=1b47a61580fbf999b866d249a&id=c3b97c030f' +
                '&EMAIL=' + encodeURIComponent($scope.visitor_email) +
                '&FNAME=' + encodeURIComponent($scope.visitor_fb_data.first_name) +
                '&LNAME=' + encodeURIComponent($scope.visitor_fb_data.last_name) +
                '&RESPCODE=' + encodeURIComponent(button_id) +
                '&c=JSON_CALLBACK'
      }).success(function (data, status, headers, config) {
        if (data.result === 'success') {
          $scope.growthChallengeStep=3;

          //notify mission hub
          var post_data = {
            fb_uid: $scope.visitor_fb_data.id,
            visitor_email: $scope.visitor_email,
            challenge_subscribe_self: true
          };
          $http({method: 'PUT', url: '/api/visitors/'+visitor_data.uid, data: post_data});
        } else {
          alert('Error: ' + data.msg);
        }
      }).error(function (data, status, headers, config) {
        alert('Error: Could not connect to mail service.');
      });
    }
  }

  $scope.growthChallengeInviteFriend = function(how){
    if(how=='fb'){
      FB.ui({
        method: 'send',
        link: $scope.friend_url
      });
      $scope.growthChallengeStep=10;
      clicky.goal(campaign_data.permalink + ': Invited friend and completed Growth Challenge via Facebook');
    }else if(how=='email'){
      $scope.email_message='I just watched a Christian film called #FallingPlates and decided to accept the "Growth Challenge" that was offered. I got to pick one friend to help me grow spiritually and I chose you!\n\n' +
              'Would you be willing to help by looking at the email content we would get, and then discussing it with me? This means 4 emails, 4 conversations over 4 weeks. That\'s it.\n\n' +
              'Let\'s take the challenge together!\n\n' +
              'You can click here to get started, or to get more information:\n' +
              $scope.friend_url;
      $('#growth-challenge-invite-friend').modal({backdrop: true, show: true});
    }else if(how=='sendemail'){
      if(!$scope.visitor_name){
        alert('Please enter Your Name.');
        return;
      }
      if(!validateEmail($scope.visitor_email)){
        alert('Your Email must be a valid email address.');
        return;
      }
      if(!validateEmail($scope.friend_email)){
        alert('Your Friend\'s Email must be a valid email address.');
        return;
      }

      //Send email
      $('#growth-challenge-invite-friend .modal-footer button').hide();
      $('#growth-challenge-invite-friend .modal-footer p').show();
      var post_data = {
        to: $scope.friend_email,
        from: $scope.visitor_email,
        from_name: $scope.visitor_name,
        subject: 'Take the "Growth Challenge" with '+$scope.visitor_name,
        message: '=== [' + $scope.visitor_name + '\'s Comments] ===\n\n' +
          $scope.friend_name + ', ' + $scope.email_message +
          '\n\n === [Note from WatchThinkChat] ===\n\n'+
          'Greetings ' + $scope.friend_name + '\n\n'+
          'You are receiving this email because a friend of yours, ' + $scope.visitor_name + ' thought you would be able to talk with them and help them grow closer to Jesus Christ.\n\n' +
          'We are writing to introduce ourselves at WatchThinkChat.  We are a ministry dedicated to intentionally present the Gospel of Jesus Christ to all people so everyone knows someone who truly follows Jesus. This initiative is simply meant to connect people who are asking for guidance with trusted friends that can help them grow their relationship with Jesus. We are not selling anything. We just want to make meaningful connections in building the kingdom for the Lord.\n\n' +
          'Please click this link to learn a little more about the process regarding connecting with ' + $scope.visitor_name + '\n\n' +
          $scope.friend_url +
          'We will send you some free resources to help you be a great mentor. This will also let us know that you will be connecting with your friend.\n\n' +
          'We are delighted that ' + $scope.visitor_name + ' enjoyed the WatchThinkChat experience sufficiently to connect with you to provide assistance.\n\n' +
          'Serving with you,\nThe WatchThinkChat Team'
      };
      $http({method: 'POST', url: '/api/emails', data: post_data}).
        success(function (data, status, headers, config) {
          $('#growth-challenge-invite-friend').modal('hide');
          $scope.growthChallengeStep=10;
        }).error(function (data, status, headers, config) {
          $('#growth-challenge-invite-friend .modal-footer button').show();
          $('#growth-challenge-invite-friend .modal-footer p').hide();
          alert('Error: ' + data);
        });
      clicky.goal(campaign_data.permalink + ': Invited friend and completed Growth Challenge via email');
    }else if(how=='accept'){
      //Send email
      $scope.growthChallengeStep=10;
      var post_data = {
        to: $scope.christianFriendEmail,
        from: $scope.visitor_email,
        from_name: $scope.visitor_name,
        subject: 'Your friend has accepted your "Growth Challenge"!',
        message: $scope.visitor_fb_data.name + '(' + $scope.visitor_email + ') has accepted to take the Growth Challenge with you!'
      };
      $http({method: 'POST', url: '/api/emails', data: post_data});
    }
  };

  $scope.sendFbMsgToOperator = function(){
    FB.ui({
      method: 'send',
      link: document.URL,
      to: operator_data.uid
    });
  };

  var postVisitorInfo = function(data){
    var chat_uid = chat_data.chat_uid;
    if(chat_uid=='offline'){
    }else{
      visitorActivity.queueMessage('Visitor has logged in with Facebook.');
      visitorActivity.queueMessage(data.name, 'fbName');
      visitorActivity.queueMessage(data.email, 'fbEmail');
      visitorActivity.queueMessage(data.id, 'fbId');
    }
  };

  $scope.updateVisitorName = function(){
    if(visitor_data.name===$scope.visitor_fb_data.name){
      return;
    }
    var post_data = {
      user_uid: visitor_data.uid,
      message_type: 'fbName',
      message: $scope.visitor_fb_data.name
    };
    $http({method: 'POST', url: '/api/chats/'+chat_data.chat_uid+'/messages', data: post_data}).
      success(function (data, status, headers, config) {
        visitor_data.name=$scope.visitor_fb_data.name;
        $('.body').append('<div class="system"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' +
                '<div class="message">Name set to: ' + $scope.visitor_fb_data.name + '</div>' +
                '</div>');
        $('.body').scrollTop($('.body')[0].scrollHeight);
        $scope.visitor_fb_data.id='0';
      }).error(function (data, status, headers, config) {
      });
  }

  $scope.growthChallengePrevStep = function(){
    switch($scope.growthChallengeStep){
      case 1:
        $scope.growthChallengeStep=0;
        $('.after-chat-challenge').hide();
        break;
      case 2:
        $scope.growthChallengeStep=1;
        $('.after-chat-challenge').show();
        break;
      case 3:
        $scope.growthChallengeStep=2;
        break;
      case 9:
        $scope.growthChallengeStep=3;
        break;
    }
  }

  $scope.$watch('growthChallengeStep', function(newValue, oldValue) {
    switch(newValue){
      case 1:
        //auto offer Growth Challenge
        if(campaign_data.growth_challenge==='auto' && !growth_challenge_visible){
          $('.after-chat-challenge').fadeIn();
          growth_challenge_visible=true;
          $timeout(function(){ visitorActivity.queueMessage('Growth Challenge visible'); }, 3200);
          clicky.goal(campaign_data.permalink + ': Growth Challenge visible');
        }
        break;
      case 2:
        clicky.goal(campaign_data.permalink + ': Started Growth Challenge');
        break;
      case 3:
        visitorActivity.queueMessage('Visitor has signed up for the Growth Challenge.');
        clicky.goal(campaign_data.permalink + ': Signed Up for Growth Challenge');
        visitorActivity.queueMessage($scope.visitor_email, 'fbEmail');
        break;
      case 9:
        visitorActivity.queueMessage('Visitor has chose to "Go it Along".');
        break;
      case 10:
        visitorActivity.queueMessage('Visitor has invited a friend and completed the Growth Challenge.');
        break;
      case 99:
        visitorActivity.queueMessage('Visitor has closed the Growth Challenge".');
        break;
      default:
    }
  });

  var onPlayerStateChange = function (evt) {
    switch (evt.data) {
      case YT.PlayerState.PLAYING:
        clicky.goal(campaign_data.permalink + ': Video Started');
        visitorActivity.queueMessage('Visitor has started video.');
        break;
      case YT.PlayerState.ENDED:
        if(!video_completed){
          $scope.$apply(function(){
            $scope.growthChallengeStep = 0;
          });
          YTplayer.stopVideo();
          //$("#player").attr('src', '');
          $("#player").hide();
          $('body').removeClass('video');
          clicky.goal(campaign_data.permalink + ': Video Completed');
        }
        video_completed=true;
        break;
      case YT.PlayerState.PAUSED:
        visitorActivity.queueMessage('Visitor has paused video.');
        break;
    }
  };

  var getBrowser = function(){
    var ua= navigator.userAgent, tem,
      M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*([\d\.]+)/i) || [];
    if(/trident/i.test(M[1])){
      tem=  /\brv[ :]+(\d+(\.\d+)?)/g.exec(ua) || [];
      return 'IE '+(tem[1] || '');
    }
    M= M[2]? [M[1], M[2]]:[navigator.appName, navigator.appVersion, '-?'];
    if((tem= ua.match(/version\/([\.\d]+)/i))!= null) M[2]= tem[1];
    return M.join(' ');
  };

  var isMobile = function() {
    var mobileBrowser = 'No';
    if(navigator.userAgent.match(/Android/i) !== null){
      mobileBrowser = 'Yes, Android';
    }
    if(navigator.userAgent.match(/BlackBerry/i) !== null){
      mobileBrowser = 'Yes, BlackBerry';
    }
    if(navigator.userAgent.match(/iPhone/i) !== null){
      mobileBrowser = 'Yes, iPhone';
    }
    if(navigator.userAgent.match(/iPad/i) !== null){
      mobileBrowser = 'Yes, iPad';
    }
    if(navigator.userAgent.match(/iPod/i) !== null){
      mobileBrowser = 'Yes, iPod';
    }
    if(navigator.userAgent.match(/IEMobile/i) !== null){
      mobileBrowser = 'Yes, Windows Mobile';
    }
    return mobileBrowser;
  };

  var getOS = function(){
    var OSName="Unknown OS";
    if (navigator.appVersion.indexOf("Win")!=-1) OSName="Windows";
    if (navigator.appVersion.indexOf("Mac")!=-1) OSName="MacOS";
    if (navigator.appVersion.indexOf("X11")!=-1) OSName="UNIX";
    if (navigator.appVersion.indexOf("Linux")!=-1) OSName="Linux";
    return OSName;
  };
  var validateEmail = function(email) {
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
  };


  $(window).focus(function() {
    window_focus=true;
  }).blur(function() {
    window_focus=false;
  });
});