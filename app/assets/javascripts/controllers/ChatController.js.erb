'use strict';

angular.module('chatApp').controller('ChatController', function ($scope, $rootScope, $route, $http, $location, $timeout, $sce, Crypt, timeUpdate, campaign_data, visitorActivity, visitorInfo) {
  if(campaign_data === null){
    document.write('Error: invalid campaign id.');
    return;
  }else{
    $scope.campaign_data = campaign_data;
    window.document.title = campaign_data.title;
  }
  $rootScope.visitor_data = {
    uid: '',
    fb_id: '',
    name: '',
    first_name:'',
    last_name: '',
    email: ''
  };
  var chat_data = {
    chat_uid: ''
  };
  $scope.operator_data = {
    uid: $location.search()['o'] || ''
  };
  var video_completed=false;
  var growth_challenge_visible=false;
  var window_focus=false;
  var YTplayer;
  $scope.growthChallengeStep = -1;
  $scope.liveChat=false;
  $scope.mobileMinChat=true;
  if(angular.isDefined($route.current.params.refer)){
    $scope.christianFriendEmail = Crypt.decodeStr($route.current.params.refer);
  }else{
    $scope.christianFriendEmail = '';
  }
  if(angular.isDefined($route.current.params.n)){
    $scope.christianFriendName = Crypt.decodeStr($route.current.params.n);
  }else{
    $scope.christianFriendName = '';
  }


  if (campaign_data.type === 'youtube') {
    var tag = document.createElement('script');
    var title = document.title;
    tag.src = "//www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    window.onYouTubeIframeAPIReady = function () {
      $('body').addClass('video');
      YTplayer = new YT.Player('player', {
        //videoId: campaign_data.video_id,
        videoId: 'KGlx11BxF24',
        playerVars: {
          autoplay: 0,
          modestbranding: 1,
          rel: 0,
          showinfo: 0,
          iv_load_policy: 3,
          html5: 1,
          start: campaign_data.video_start,
          end: campaign_data.video_end
        },
        events: {
          'onStateChange': onPlayerStateChange
        }
      });
    };
  }

  //create visitor
  $http({method: 'POST', url: '/api/visitors'}).
    success(function (data, status, headers, config) {
      $rootScope.visitor_data.uid = data.uid;
      $rootScope.visitor_data.profile_pic = '<%= asset_path("avatar.png") %>';
      if(campaign_data.preemptive_chat && visitorInfo.isMobile() === 'No'){
        $scope.startChat('');
      }
    }).error(function (data, status, headers, config) {
    });

  $scope.postMessage = function (blur) {
    if($scope.chatMessage==''){
      return;
    }
    if(blur && visitorInfo.isMobile() === 'No'){
      return;
    }

    $('.body').append('<div class="content"><img class="avatar" src="' + $rootScope.visitor_data.profile_pic + '"><div class="message">' + $scope.chatMessage + '</div>' +
        '<div class="name muted"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>You</div>' +
        '</div>');
    $('.body').scrollTop($('.body')[0].scrollHeight);
    visitorActivity.queueMessage($scope.chatMessage, 'user');
    $scope.chatMessage = '';
  };

  $scope.startChat = function(initialMsg){
    if(!video_completed && !campaign_data.preemptive_chat){
      $('#finishVideo').fadeIn(1).delay(3000).fadeOut(1);
      $('#start-chat-panel').fadeOut(1).delay(3000).fadeIn(1);
      return;
    }
    if(chat_data.chat_uid){ //chat already started
      return;
    }

    var data = {
      campaign_uid: campaign_data.uid,
      visitor_uid: $rootScope.visitor_data.uid,
      operator_uid: $scope.operator_data.uid
    };
    $http({method: 'POST', url: '/api/chats', data: data}).
      success(function (data, status, headers, config) {
        chat_data = data;
        $rootScope.chat_uid = data.chat_uid;
        $scope.operator_data = data.operator;
        if(angular.isDefined($scope.button_clicked)){
          $scope.button_clicked.message_visible = $sce.trustAsHtml($scope.button_clicked.message_active_chat);
        }
        $scope.liveChat=true;

        $('.operator').html('<img class="avatar" src="' + $scope.operator_data.profile_pic + '">' +
          '<div class="message">You are chatting with<br>' + $scope.operator_data.name + '</div>');
        var pusher = new Pusher('249ce47158b276f4d32b');
        pusher.subscribe('visitor_' + $rootScope.visitor_data.uid);
        var channel_chat = pusher.subscribe('chat_'+chat_data.chat_uid);
        channel_chat.bind('event', function (data) {
          if (data.user_uid != $rootScope.visitor_data.uid) {
            if (data.message_type == 'activity') {
              if(data.message == 'challenge'){
                if(!growth_challenge_visible){
                  $('.after-chat-challenge').fadeIn();
                  visitorActivity.queueMessage('Growth Challenge visible');
                  growth_challenge_visible=true;
                  $('body').scrollTop($('body')[0].scrollHeight);
                  $('.body').append('<div class="system"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' +
                          '<div class="message">Growth Challenge visible</div>' +
                          '</div>');
                  $('.body').scrollTop($('.body')[0].scrollHeight);
                  clicky.goal(campaign_data.permalink + ': Growth Challenge visible');
                }
              }
            } else {
              $('.body').append('<div class="content odd"><img class="avatar" src="' + $scope.operator_data.profile_pic + '"><div class="message">' + data.message + '</div>' +
                      '<div class="name muted"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' + $scope.operator_data.name + '</div>' +
                      '</div>');
              $('.body').scrollTop($('.body')[0].scrollHeight);
              $scope.$apply(function(){
                $scope.mobileMinChat=false;
              });
              if (!window_focus) {
                $('#newMsgAlert')[0].play();
              }
            }
          }
        });

        channel_chat.bind('end', function (data) {
          pusher.unsubscribe('chat_'+chat_data.chat_uid);
          $('#chatEnd').show();
          $('.body').empty();
          chat_data.chat_uid = '';
          $scope.$apply(function(){
            $scope.liveChat=false;
          });
        });

        $timeout(function(){
          if(initialMsg){
            visitorActivity.queueMessage(initialMsg, 'activity-button');
          }
          visitorActivity.queueMessage(clientIP, 'ip');
          visitorActivity.queueMessage(visitorInfo.getBrowser(), 'browser');
          visitorActivity.queueMessage(visitorInfo.isMobile(), 'mobile');
          visitorActivity.queueMessage(visitorInfo.getOS(), 'os');
        }, 2500);
      }).error(function (data, status, headers, config) {
        if(data.error === 'no_operators_available'){
          try{
            $scope.button_clicked.message_visible = $sce.trustAsHtml($scope.button_clicked.message_no_chat) || $sce.trustAsHtml('');
            chat_data.chat_uid = 'offline';
            $rootScope.chat_uid = 'offline';
            $('.after-chat-challenge').fadeIn();
            growth_challenge_visible=true;
          }catch(e){}
          //Get Operator Info
          if($scope.operator_data.uid){
            $http({method: 'GET', url: '/api/operators/' + $scope.operator_data.uid}).
              success(function (data, status, headers) {
                $scope.operator_data = data;
                $('#noOperators').show();
              }).error(function() {
                $('#noOperators').show();
              });
          }else{
            $('#noOperators').show();
          }
        }else{
          alert('Error: ' + (data.message || 'Cannot create new chat.'));
        }
      });
  };

  $scope.buttonClick = function(button){
    $scope.button_clicked = button;

    if(!chat_data.chat_uid){
      $scope.startChat(button.text);
    }else{
      visitorActivity.queueMessage(button.text, 'activity-button');
      $scope.button_clicked.message_visible = $sce.trustAsHtml($scope.button_clicked.message_active_chat);
      $('.after-chat-challenge').show();
    }
    $scope.growthChallengeStep = 1;
    clicky.goal(campaign_data.permalink + ': Button Click: ' + button.id + ' (' + button.text + ')');
  };

  $scope.facebookLogin = function(){
    FB.login(function(response) {
      if (response.authResponse) {
        FB.api('/me', function(response) {
          $scope.$apply(function(){
            $rootScope.visitor_data.profile_pic = 'http://graph.facebook.com/'+response.id+'/picture?width=45&height=45';
            if(angular.isDefined(response.email)){
              $scope.visitor_email = response.email;
            }
            $rootScope.visitor_data.fb_id = response.id;
            $rootScope.visitor_data.name = response.name;
            $rootScope.visitor_data.first_name = response.first_name;
            $rootScope.visitor_data.last_name = response.last_name;
          });

          $('.body').append('<div class="system"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' +
                  '<div class="message">Logged in with Facebook</div>' +
                  '</div>');
          $('.body').scrollTop($('.body')[0].scrollHeight);

          visitorActivity.queueMessage('Visitor has logged in with Facebook.');
          visitorActivity.queueMessage(response.name, 'fbName');
          visitorActivity.queueMessage(response.email, 'fbEmail');
          visitorActivity.queueMessage(response.id, 'fbId');
        });
        clicky.goal(campaign_data.permalink + ': Logged in with Facebook');
      }
    });
  };

  $scope.sendFbMsgToOperator = function(){
    FB.ui({
      method: 'send',
      link: document.URL,
      to: $scope.operator_data.uid
    });
  };

  $scope.updateVisitorName = function(){
    $scope.visitor_data.name = $scope.visitor_data.tmp_name;
    $('.body').append('<div class="system"><div class="date timestamp-refresh" timestamp="' + Math.round(+new Date()).toString() + '">Just Now</div>' +
      '<div class="message">Name set to: ' + $rootScope.visitor_data.name + '</div>' +
      '</div>');
    $('.body').scrollTop($('.body')[0].scrollHeight);

    visitorActivity.queueMessage($rootScope.visitor_data.name, 'fbName');
  };

  $scope.$watch('growthChallengeStep', function(newValue, oldValue) {
    switch(newValue){
      case 1:
        //auto offer Growth Challenge
        if(campaign_data.growth_challenge==='auto' && !growth_challenge_visible){
          $('.after-chat-challenge').fadeIn();
          growth_challenge_visible=true;
          $timeout(function(){ visitorActivity.queueMessage('Growth Challenge visible'); }, 3200);
          clicky.goal(campaign_data.permalink + ': Growth Challenge visible');
        }
        break;
      case 2:
        clicky.goal(campaign_data.permalink + ': Started Growth Challenge');
        break;
      case 3:
        visitorActivity.queueMessage('Visitor has signed up for the Growth Challenge.');
        clicky.goal(campaign_data.permalink + ': Signed Up for Growth Challenge');
        visitorActivity.queueMessage($scope.visitor_email, 'fbEmail');
        break;
      case 9:
        visitorActivity.queueMessage('Visitor has chose to "Go it Alone".');
        break;
      case 10:
        visitorActivity.queueMessage('Visitor has invited a friend and completed the Growth Challenge.');
        break;
      case 99:
        visitorActivity.queueMessage('Visitor has closed the Growth Challenge".');
        break;
      default:
    }
  });

  var onPlayerStateChange = function (evt) {
    switch (evt.data) {
      case YT.PlayerState.PLAYING:
        clicky.goal(campaign_data.permalink + ': Video Started');
        visitorActivity.queueMessage('Visitor has started video.');
        break;
      case YT.PlayerState.ENDED:
        if(!video_completed){
          $scope.$apply(function(){
            $scope.growthChallengeStep = 0;
          });
          YTplayer.stopVideo();
          //$("#player").attr('src', '');
          $("#player").hide();
          $('body').removeClass('video');
          clicky.goal(campaign_data.permalink + ': Video Completed');
          visitorActivity.queueMessage('Video has ended.');
        }
        video_completed=true;
        break;
      case YT.PlayerState.PAUSED:
        visitorActivity.queueMessage('Visitor has paused video.');
        break;
    }
  };

  $(window).focus(function() {
    window_focus=true;
  }).blur(function() {
    window_focus=false;
  });
});